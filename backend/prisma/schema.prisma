generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model User {
  id              Int          @id @default(autoincrement())
  googleId        String       @unique
  nickname        String
  profileImageUrl String?
  rating_mu       Float        @default(25.0)
  rating_sigma    Float        @default(8.333)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  lastLoginAt     DateTime?
  // 게임 통계 (간단한 win/draw/lose 시스템)
  totalGames      Int           @default(0)
  wins            Int           @default(0)
  draws           Int           @default(0)
  losses          Int           @default(0)
  gamePlayers     GamePlayer[]
}

model Game {
  id          Int          @id @default(autoincrement())
  gameId      String       @unique
  playedAt    DateTime     @default(now())
  playerCount Int
  totalRounds Int
  roomType    String?
  roomTitle   String?
  players     GamePlayer[]

  @@index([gameId])
  @@index([playedAt])
}

model GamePlayer {
  id                  Int   @id @default(autoincrement())
  gameId              Int
  userId              Int
  rank                Int
  score               Int
  rating_mu_before    Float
  rating_sigma_before Float
  rating_mu_after     Float
  rating_sigma_after  Float
  rating_mu_change    Float
  game                Game  @relation(fields: [gameId], references: [id], onDelete: Cascade)
  user                User  @relation(fields: [userId], references: [id])

  @@unique([gameId, userId])
  @@index([userId])
  @@index([gameId])
  @@index([rank])
}
